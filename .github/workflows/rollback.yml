name: Rollback ECS to previous revision

on:
  workflow_dispatch: {}

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER }}
  ECS_SERVICE: ${{ secrets.ECS_SERVICE }}

jobs:
  rollback:
    runs-on: ubuntu-latest
    environment: aws_creds

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Find previous task definition
        id: find-prev
        run: |
          set -euo pipefail
          CUR_TD=$(aws ecs describe-services \
            --cluster "$ECS_CLUSTER" \
            --services "$ECS_SERVICE" \
            --query 'services[0].taskDefinition' \
            --output text)

          FAMILY=$(aws ecs describe-task-definition \
            --task-definition "$CUR_TD" \
            --query 'taskDefinition.family' \
            --output text)

          PREV_TD=$(aws ecs list-task-definitions \
            --family-name "$FAMILY" \
            --status ACTIVE \
            --sort DESC \
            --query 'taskDefinitionArns[1]' \
            --output text)

          if [[ -z "$PREV_TD" || "$PREV_TD" == "None" ]]; then
            echo "No previous active task definition found for family $FAMILY"
            exit 1
          fi

          echo "PREV_TD=$PREV_TD" >> $GITHUB_ENV
          echo "Rolling back from $CUR_TD to $PREV_TD"

      - name: Rollback to previous task definition
        uses: nick-invision/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 5
          command: |
            aws ecs update-service \
              --cluster ${{ env.ECS_CLUSTER }} \
              --service ${{ env.ECS_SERVICE }} \
              --task-definition "${{ env.PREV_TD }}" \
              --force-new-deployment \
              --region ${{ env.AWS_REGION }}

      - name: Wait for stability
        run: |
          aws ecs wait services-stable \
            --cluster "${{ env.ECS_CLUSTER }}" \
            --services "${{ env.ECS_SERVICE }}" \
            --region "${{ env.AWS_REGION }}"
          echo "Rollback complete âœ…"

